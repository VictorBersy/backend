# This file is for local development only
# Please use the image generated by the Dockerfile for production
version: "3.8"
services:
  api:
    build:
      target: development
    tty: true
    restart: on-failure
    environment:
      - DATABASE_URL=postgres://voidmesh:voidmesh@db:5432/voidmesh?sslmode=disable
    ports:
      - "9000:9000"
      - "50051:50051"
    volumes:
      - ./:/src/
      - go_modules:/go/pkg/mod/
    healthcheck:
      test: "grpc-health-probe -addr=:50051 && nc -z localhost 9000"
      interval: 1s
      timeout: 10s
      retries: 10
    depends_on:
      db:
        condition: service_healthy
        restart: true
    command: "air -c .air.docker-api.toml"

  grpcui:
    image: fullstorydev/grpcui:latest
    depends_on:
      api:
        condition: service_healthy
        restart: true
    command: -plaintext api:50051

  sqlc:
    build:
      target: development
    tty: true
    restart: on-failure
    volumes:
      - ./:/src/
      - go_modules:/go/pkg/mod/
    command: "air -c .air.docker-sqlc.toml"

  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=voidmesh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U voidmesh" ]
      interval: 1s
      timeout: 10s
      retries: 10
    volumes:
      - ./internal/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  pgweb:
    image: sosedoff/pgweb
    ports:
      - "8080:8081"
    environment:
      - PGWEB_DATABASE_URL=postgres://voidmesh:voidmesh@db:5432/voidmesh?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
        restart: true
    command: "--log-level=ERROR"

volumes:
  go_modules:
